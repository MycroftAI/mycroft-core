#!/bin/bash

# Copyright 2016 Mycroft AI, Inc.
#
# This file is part of Mycroft Core.
#
# Mycroft Core is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Mycroft Core is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Mycroft Core.  If not, see <http://www.gnu.org/licenses/>.


# @author Augusto Monteiro
#
# This script assists in the installation and management of
# skills loaded from Github.  

mycroft_skill_folder=${mycroft_skill_folder:-"/opt/mycroft/skills"}
if [[ ! -d "${mycroft_skill_folder}" ]] ; then
    echo "Uname to access ${mycroft_skill_folder}!"
    exit 101
fi 

default_skills="alarm audio-record configuration date-time desktop-launcher ip joke hello-world media npr-news naptime pairing personal reminder installer singing speak spelling stop stock volume weather wiki wolfram-alpha mark1-demo"

# currently unused, so commented out.
#mycroft_virtualenv=~/.virtualenvs/mycroft/bin/activate

echo "#######  Mycroft Skill Manager #######"

function help() {
    echo "msm: Mycroft Skill Manager"
    echo -e "     Copyright (c) 2017 Mycroft AI, Inc.  All rights reserved.\n"
    echo "usage: msm install <repository> or <name>"
    echo "     Installs the given Skill into the ${mycroft_skill_folder}"
    echo "     where <repository> is the address of the skill in Github."
    echo -e "example: msm install https://github.com/ethanaward/demo_skill.git\n"
    exit 1
}

function list() {
	curl -s "https://raw.githubusercontent.com/MycroftAI/mycroft-skills/master/.gitmodules" 
}

function install() {
if [[ $# -lt 1 ]] ; then
    help
    exit 1
fi
cd "${mycroft_skill_folder}"

#if [[ -z "$1" ]]; then
#    echo "You must pass the git url or skill name"
#    exit 2
#fi

# loop through list of arguments
while [[ $# -gt 0 ]] ; do
    iskill="$1";
    shift;
    if [[ "${iskill}" == "git@"* || "${iskill}" == "https://"* || "${iskill}" == "http://"* ]]; then
        repo="${iskill}"
    else
#        skill_list="$(curl -s "https://raw.githubusercontent.com/MycroftAI/mycroft-skills/master/.gitmodules")"
        skill_list=$(list)
        skills=$(echo "$skill_list" | grep -n 'submodule' | sed 's/[[:space:]]//g' | sed 's/\[submodule"//g' | sed 's/"\]//g')
        exact_match=$(echo "$skills" | grep -i ".*:$2$")
        skill=$(echo "$skills" | grep -i ".*:.*$2.*")
        if [ ! -z "${exact_match}" ]; then
            skill=${exact_match}
        fi
        git_line=$(echo "$skill" | sed 's/\:.*//')
    
        if [[ "${skill}" ==  *$'\n'* ]]; then
            echo -e "Your search has multiple choices\n\n$skill" | sed 's/.*://g'
            exit 3
        else
            if [[ -z "${git_line}" ]]; then
                echo "Skill not found"
                exit 3
            fi
        repo_line=$(($git_line + 2))
        repo=$(echo "$skill_list" | sed -n $repo_line'{p;q;}' | sed 's/[[:space:]]//g' | sed 's/url=//g')
        fi 
    fi
    git_name=$(echo "${repo}" | sed 's/.*\///')
    name=$(echo "$git_name" | sed 's/.git//')
    echo "Cloning repository"
    git clone "${repo}" >> /dev/null
    cd "${name}"
    if [ -f "requirements.txt" ]; then
        echo "Installing libraries requirements"
        pip install -r requirements.txt
    fi 
    echo "Skill installed!"
done

}

function update() {
cd ${mycroft_skill_folder}
for d in $(ls -d */); do
    if git -C "$d" rev-parse --git-dir > /dev/null 2>&1; then
        cd "${d}"
        if [[ -z $(git status --porcelain) ]]; then
        git fetch
        git reset --hard origin/master 
    fi
    cd ..
fi
done
}

#### Main

OPT=$1
shift
case ${OPT} in
    "install") install "$*";;
    "list") list | grep 'submodule "' | sed 's/\[submodule "//g'| sed 's/"\]//g' ;;
    "update") update ;;
    "default") install "${default_skills}" ;;
    *) help ;;
esac

exit 0